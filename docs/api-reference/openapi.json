{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.1",
    "title": "AgentCal API reference",
    "description": "API documentation for the AgentCal service"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key required for authentication. \n\nKeys begin with 'agentcal_' prefix. Get your API key from the [Developer Dashboard](https://dashboard.agentcal.ai/settings/developers). Keys are scoped to an organization."
      }
    },
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Server is running",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get all tasks",
        "description": "This is a test description because I would like to see how it looks in the OpenAPI documentation. This should be a longer description to test how it handles larger text and whether it wraps correctly in the generated docs.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "done": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "updatedAt",
                      "done",
                      "name"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new task",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "description": "The task to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  }
                },
                "required": [
                  "done",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "done": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "done",
                    "name"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "boolean",
                            "received": "undefined",
                            "path": [
                              "done"
                            ],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "name"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Get a task by ID",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "required": [
                "id"
              ],
              "example": "4651e634-a530-4484-9b09-9616a28f35e3"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "done": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "done",
                    "name"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid UUID error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "id"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a task",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "required": [
                "id"
              ],
              "example": "4651e634-a530-4484-9b09-9616a28f35e3"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The task to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "done": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "done",
                    "name"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "issues": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    }
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path"
                                ]
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "issues",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "success",
                        "error"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "issues": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    }
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path"
                                ]
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "issues",
                            "name"
                          ],
                          "example": {
                            "issues": [
                              {
                                "code": "invalid_type",
                                "expected": "string",
                                "received": "undefined",
                                "path": [
                                  "id"
                                ],
                                "message": "Required"
                              }
                            ],
                            "name": "ZodError"
                          }
                        }
                      },
                      "required": [
                        "success",
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "description": "Delete a task by ID",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "required": [
                "id"
              ],
              "example": "4651e634-a530-4484-9b09-9616a28f35e3"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "path"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": [
                              "id"
                            ],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/event-types": {
      "get": {
        "summary": "Get all Event Types",
        "description": "Get all Event Types for a user or organization. If no query parameters are provided, all event types for the organization will be returned.",
        "tags": [
          "Event Types"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "tdlAgM7KV7m6Nwj9E6wHuCAkyHhSaPeQ"
            },
            "required": false,
            "name": "orgId",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "example": "tdlAgM7KV7m6Nwj9E6wHuCAkyHhSaPeQ"
            },
            "required": false,
            "name": "userId",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Must be the full unique slug of the event type. Example: 'my-event-type'",
              "example": "example-slug"
            },
            "required": false,
            "name": "slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "length": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "hidden": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "listPosition": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "ownerId": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string",
                        "nullable": true
                      },
                      "schedulingType": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "ROUND_ROBIN",
                          "COLLECTIVE",
                          "INDIVIDUAL"
                        ]
                      },
                      "minimumBookingNotice": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "beforeEventBuffer": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "afterEventBuffer": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "limitBookingFrequency": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "dailyFrequencyLimit": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "weeklyFrequencyLimit": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "monthlyFrequencyLimit": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "limitFutureBookings": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "maxDaysInFuture": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "requiresConfirmation": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "disableGuests": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "locationType": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "IN_PERSON",
                          "VIRTUAL",
                          "PHONE"
                        ]
                      },
                      "timeZone": {
                        "type": "string",
                        "nullable": true
                      },
                      "lockTimezone": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "availabilityScheduleId": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid"
                      },
                      "aiEmailAssistantEnabled": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "aiPhoneAssistantEnabled": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "metadata": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "nullable": true
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "nullable": true
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "nullable": true
                            }
                          },
                          {
                            "nullable": true
                          }
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "updatedAt",
                      "title",
                      "slug",
                      "description",
                      "length",
                      "hidden",
                      "listPosition",
                      "ownerId",
                      "organizationId",
                      "schedulingType",
                      "minimumBookingNotice",
                      "beforeEventBuffer",
                      "afterEventBuffer",
                      "limitBookingFrequency",
                      "dailyFrequencyLimit",
                      "weeklyFrequencyLimit",
                      "monthlyFrequencyLimit",
                      "limitFutureBookings",
                      "maxDaysInFuture",
                      "requiresConfirmation",
                      "disableGuests",
                      "locationType",
                      "timeZone",
                      "lockTimezone",
                      "availabilityScheduleId",
                      "aiEmailAssistantEnabled",
                      "aiPhoneAssistantEnabled",
                      "metadata"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Event Type",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Event Types"
        ],
        "requestBody": {
          "description": "The event type to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 1000
                  },
                  "length": {
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  }
                },
                "required": [
                  "title",
                  "length"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created event type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "hidden": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "listPosition": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "nullable": true
                    },
                    "schedulingType": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "ROUND_ROBIN",
                        "COLLECTIVE",
                        "INDIVIDUAL"
                      ]
                    },
                    "minimumBookingNotice": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "beforeEventBuffer": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "afterEventBuffer": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "limitBookingFrequency": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "dailyFrequencyLimit": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "weeklyFrequencyLimit": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "monthlyFrequencyLimit": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "limitFutureBookings": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "maxDaysInFuture": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "requiresConfirmation": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "disableGuests": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "locationType": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "IN_PERSON",
                        "VIRTUAL",
                        "PHONE"
                      ]
                    },
                    "timeZone": {
                      "type": "string",
                      "nullable": true
                    },
                    "lockTimezone": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "availabilityScheduleId": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "aiEmailAssistantEnabled": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "aiPhoneAssistantEnabled": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "metadata": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "nullable": true
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "nullable": true
                          }
                        },
                        {
                          "type": "array",
                          "items": {
                            "nullable": true
                          }
                        },
                        {
                          "nullable": true
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "title",
                    "slug",
                    "description",
                    "length",
                    "hidden",
                    "listPosition",
                    "ownerId",
                    "organizationId",
                    "schedulingType",
                    "minimumBookingNotice",
                    "beforeEventBuffer",
                    "afterEventBuffer",
                    "limitBookingFrequency",
                    "dailyFrequencyLimit",
                    "weeklyFrequencyLimit",
                    "monthlyFrequencyLimit",
                    "limitFutureBookings",
                    "maxDaysInFuture",
                    "requiresConfirmation",
                    "disableGuests",
                    "locationType",
                    "timeZone",
                    "lockTimezone",
                    "availabilityScheduleId",
                    "aiEmailAssistantEnabled",
                    "aiPhoneAssistantEnabled",
                    "metadata"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Internal server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event-types/{id}": {
      "delete": {
        "summary": "Delete an Event Type",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Event Types"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "required": [
                "id"
              ],
              "example": "4651e634-a530-4484-9b09-9616a28f35e3"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Event type deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions to delete this event type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Event type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Internal server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/availability": {
      "get": {
        "summary": "Get all Availability Schedules",
        "description": "Get all Availability Schedules for a user or organization. To get all organization availability schedules, the user's role must be 'admin'. If no query parameters are provided, all availability schedules for the user will be returned.",
        "tags": [
          "Event Types"
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "name": "returnOrg",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "timeZone": {
                        "type": "string"
                      },
                      "ownerId": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string",
                        "nullable": true
                      },
                      "isDefault": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "weeklySlots": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "scheduleId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "dayOfWeek": {
                              "type": "integer",
                              "minimum": -2147483648,
                              "maximum": 2147483647
                            },
                            "startTime": {
                              "type": "string"
                            },
                            "endTime": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "scheduleId",
                            "dayOfWeek",
                            "startTime",
                            "endTime"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "timeZone",
                      "ownerId",
                      "organizationId",
                      "isDefault",
                      "weeklySlots"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Internal server error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an Availability Schedule",
        "tags": [
          "Event Types"
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "Availability Schedule to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "weeklySchedule": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dayOfWeek": {
                          "type": "integer",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "startTime": {
                          "type": "string"
                        },
                        "endTime": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "dayOfWeek",
                        "startTime",
                        "endTime"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "weeklySchedule"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Availability Schedule created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "timeZone": {
                      "type": "string"
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string",
                      "nullable": true
                    },
                    "isDefault": {
                      "type": "boolean",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "name",
                    "timeZone",
                    "ownerId",
                    "organizationId",
                    "isDefault"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, user does not have valid permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found, organization or user does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "example": {
                    "success": false,
                    "message": "Internal server error"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}